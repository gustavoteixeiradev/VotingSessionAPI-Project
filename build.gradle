plugins {
	id 'org.springframework.boot' version '2.3.10.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '3.3'
}

sonarqube {
	properties {
		property "sonar.projectKey", "gustavoteixeiradev_VotingSessionAPI-Project"
		property "sonar.organization", "devgustavoteixeira"
		property "sonar.host.url", "https://sonarcloud.io"
		property 'sonar.core.codeCoveragePlugin', 'jacoco'
//		property 'sonar.coverage.jacoco.xmlReportPaths', '${project.buildDir}/reports/jacoco.xml'
//		property "sonar.exclusions", "**/*Config.java,**/*DTO.java"
	}
}
//jacocoTestReport {
//	dependsOn test // tests are required to run before generating the report
//	reports {
//		xml.enabled true
//		xml.enabled true
//		csv.enabled false
//		//to create coverage report in html
//		html.destination file("${buildDir}/reports/coverage")
//		//for XML
//		xml.destination file("${buildDir}/reports/jacoco.xml")
//	}
//}
//
//test {
//	finalizedBy jacocoTestReport // report is always generated after tests run
//}
//
//tasks.named('sonarqube').configure {
//	dependsOn test
//}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}
test.finalizedBy jacocoTestReport
tasks.named('sonarqube').configure {
	dependsOn test
}

group = 'dev.gustavoteixeira.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
